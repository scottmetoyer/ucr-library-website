<?php

/**
 * @file
 * Contains installation and update routines for the People Profile Content Type.
 */

use Drupal\Component\Serialization\Yaml;

/**
 * Implements hook_install().
 */
function ucr_core_install() {
  if (\Drupal::isConfigSyncing()) {
    return;
  }
}

/**
 * Update Core for new Content-Ordering Taxonomy, Content Views, and updated Entity Browser.
 */
function ucr_core_update_8001() {
  $config = \Drupal::configFactory();
  $uuid_service = \Drupal::service('uuid');

  // Begin User Fields Creations.
  // *** User's Full Name
  $fullNameStorage = \Drupal\field\Entity\FieldStorageConfig::loadByName('user', 'field_full_name');
  if (!$fullNameStorage) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/field.storage.user.field_full_name.yml';
    $file_contents = file_get_contents($file_path);
    $full_name = Yaml::decode($file_contents);
    \Drupal\field\Entity\FieldStorageConfig::create($full_name)->save();
  }

  $user_name = \Drupal\field\Entity\FieldConfig::loadByName('user', 'user', 'field_full_name');
  if(!$user_name) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/field.field.user.user.field_full_name.yml';
    $file_contents = file_get_contents($file_path);
    $name_field = Yaml::decode($file_contents);

    $uuid = $uuid_service->generate();
    $full_array = array_merge(array('uuid' => $uuid), $name_field);
    \Drupal\field\Entity\FieldConfig::create($full_array)->save();
  }

  // *** Campus Relations
  $campusRelationStorage = \Drupal\field\Entity\FieldStorageConfig::loadByName('user', 'field_campus_relation');
  if (!$campusRelationStorage) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/field.storage.user.field_campus_relation.yml';
    $file_contents = file_get_contents($file_path);
    $relation = Yaml::decode($file_contents);
    \Drupal\field\Entity\FieldStorageConfig::create($relation)->save();
  }

  $campus_relations = \Drupal\field\Entity\FieldConfig::loadByName('user', 'user', 'field_campus_relation');
  if(!$campus_relations) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/field.field.user.user.field_campus_relation.yml';
    $file_contents = file_get_contents($file_path);
    $relation_field = Yaml::decode($file_contents);

    $uuid = $uuid_service->generate();
    $full_array = array_merge(array('uuid' => $uuid), $relation_field);
    \Drupal\field\Entity\FieldConfig::create($full_array)->save();
  }

  // *** Contact Number
  $contactNumberStorage = \Drupal\field\Entity\FieldStorageConfig::loadByName('user', 'field_contact_number');
  if (!$contactNumberStorage) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/field.storage.user.field_contact_number.yml';
    $file_contents = file_get_contents($file_path);
    $contact_number = Yaml::decode($file_contents);
    \Drupal\field\Entity\FieldStorageConfig::create($contact_number)->save();
  }

  $contact_number = \Drupal\field\Entity\FieldConfig::loadByName('user', 'user', 'field_contact_number');
  if(!$contact_number) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/field.field.user.user.field_contact_number.yml';
    $file_contents = file_get_contents($file_path);
    $number_field = Yaml::decode($file_contents);

    $uuid = $uuid_service->generate();
    $full_array = array_merge(array('uuid' => $uuid), $number_field);
    \Drupal\field\Entity\FieldConfig::create($full_array)->save();
  }

  // *** Dept ID
  $deptIDStorage = \Drupal\field\Entity\FieldStorageConfig::loadByName('user', 'field_dept_id');
  if (!$deptIDStorage) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/field.storage.user.field_dept_id.yml';
    $file_contents = file_get_contents($file_path);
    $dept_id = Yaml::decode($file_contents);
    \Drupal\field\Entity\FieldStorageConfig::create($dept_id)->save();
  }

  $dept_id = \Drupal\field\Entity\FieldConfig::loadByName('user', 'user', 'field_dept_id');
  if(!$dept_id) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/field.field.user.user.field_dept_id.yml';
    $file_contents = file_get_contents($file_path);
    $dept_id_field = Yaml::decode($file_contents);

    $uuid = $uuid_service->generate();
    $full_array = array_merge(array('uuid' => $uuid), $dept_id_field);
    \Drupal\field\Entity\FieldConfig::create($full_array)->save();
  }

  // *** Dept Name
  $deptNameStorage = \Drupal\field\Entity\FieldStorageConfig::loadByName('user', 'field_dept_name');
  if (!$deptNameStorage) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/field.storage.user.field_dept_name.yml';
    $file_contents = file_get_contents($file_path);
    $dept_name = Yaml::decode($file_contents);
    \Drupal\field\Entity\FieldStorageConfig::create($dept_name)->save();
  }

  $dept_name = \Drupal\field\Entity\FieldConfig::loadByName('user', 'user', 'field_dept_name');
  if(!$dept_name) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/field.field.user.user.field_dept_name.yml';
    $file_contents = file_get_contents($file_path);
    $dept_name_field = Yaml::decode($file_contents);

    $uuid = $uuid_service->generate();
    $full_array = array_merge(array('uuid' => $uuid), $dept_name_field);
    \Drupal\field\Entity\FieldConfig::create($full_array)->save();
  }

  // *** Org ID
  $orgIDStorage = \Drupal\field\Entity\FieldStorageConfig::loadByName('user', 'field_org_id');
  if (!$orgIDStorage) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/field.storage.user.field_org_id.yml';
    $file_contents = file_get_contents($file_path);
    $org_id = Yaml::decode($file_contents);
    \Drupal\field\Entity\FieldStorageConfig::create($org_id)->save();
  }

  $org_id = \Drupal\field\Entity\FieldConfig::loadByName('user', 'user', 'field_org_id');
  if(!$org_id) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/field.field.user.user.field_org_id.yml';
    $file_contents = file_get_contents($file_path);
    $org_id_field = Yaml::decode($file_contents);

    $uuid = $uuid_service->generate();
    $full_array = array_merge(array('uuid' => $uuid), $org_id_field);
    \Drupal\field\Entity\FieldConfig::create($full_array)->save();
  }
  // End User Fields Creations.

  // Begin updating the user admin view & the form display.
  // *** Update the Form Display.
  $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/optional/core.entity_form_display.user.user.default.yml';
  $file_contents = file_get_contents($file_path);
  $user_form = Yaml::decode($file_contents);
  $current_form = $config->getEditable('core.entity_form_display.user.user.default');
  $current_form_id = $current_form->get('uuid');
  if(!$current_form_id) { // Custom Form does not exist. So create a new one.
    $uuid = $uuid_service->generate();
    $full_array = array_merge(array('uuid' => $uuid), $user_form);
    $current_form->setData($full_array)->save(TRUE);
  } else { // A custom one exists, so update the parts needed.
    $current_form->set('dependencies', $user_form['dependencies'])
      ->set('third_party_settings', $user_form['third_party_settings'])
      ->set('content', $user_form['content'])
      ->set('hidden', $user_form['hidden'])->save(TRUE);
  }

  // *** Update the user view display
  $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/optional/core.entity_view_display.user.user.default.yml';
  $file_contents = file_get_contents($file_path);
  $user_view = Yaml::decode($file_contents);
  $current_view = $config->getEditable('core.entity_view_display.user.user.default');
  $current_view_id = $current_view->get('uuid');
  if(!$current_view_id) { // Custom View does not exist. So create a new one.
    $uuid = $uuid_service->generate();
    $full_array = array_merge(array('uuid' => $uuid), $user_view);
    $current_view->setData($full_array)->save(TRUE);
  } else { // A custom one exists, so update the parts needed.
    $current_view->set('dependencies', $user_view['dependencies'])
      ->set('content', $user_view['content'])
      ->set('hidden', $user_view['hidden'])->save(TRUE);
  }

  // *** Update the user_admin view
  $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/views.view.user_admin_people.yml';
  $file_contents = file_get_contents($file_path);
  $user_yml = Yaml::decode($file_contents);
  $current_user_view = $config->getEditable('views.view.user_admin_people');
  $current_user_view->set('dependencies', $user_yml['dependencies'])->save(TRUE);
  $current_user_view->set('display', $user_yml['display'])->save(TRUE);

  // Create the new Taxonomy item for use.
  $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/taxonomy.vocabulary.content_keywords.yml';
  $file_contents = file_get_contents($file_path);
  $new_tax = Yaml::decode($file_contents);
  $current_vocab = $config->getEditable('taxonomy.vocabulary.content_keywords');
  $vocab_id = $current_vocab->get('uuid');
  if(!$vocab_id) { // The new vocab not exist. So create a new one.
    // This will create the vocab definition.
    $uuid = $uuid_service->generate();
    $full_array = array_merge(array('uuid' => $uuid), $new_tax);
    $current_vocab->setData($full_array)->save(TRUE);

    // Create the form_display mode.
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/core.entity_form_display.taxonomy_term.content_keywords.default.yml';
    $file_contents = file_get_contents($file_path);
    $tax_form_view = Yaml::decode($file_contents);
    $current_form_view = $config->getEditable('core.entity_form_display.taxonomy_term.content_keywords.default');
    $vocab_id = $current_form_view->get('uuid');
    if(!$vocab_id) {
      $uuid = $uuid_service->generate();
      $full_array = array_merge(array('uuid' => $uuid), $tax_form_view);
      $current_form_view->setData($full_array)->save(TRUE);
    }

    // Create the view_display mode.
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/core.entity_view_display.taxonomy_term.content_keywords.default.yml';
    $file_contents = file_get_contents($file_path);
    $tax_display_view = Yaml::decode($file_contents);
    $current_display_view = $config->getEditable('core.entity_view_display.taxonomy_term.content_keywords.default');
    $vocab_id = $current_display_view->get('uuid');
    if(!$vocab_id) {
      $uuid = $uuid_service->generate();
      $full_array = array_merge(array('uuid' => $uuid), $tax_display_view);
      $current_display_view->setData($full_array)->save(TRUE);
    }
  }

  // Create the normal content keywords storage for all node content types, and then also the basic page assignment.
  $contentKeywordsStorage = \Drupal\field\Entity\FieldStorageConfig::loadByName('node', 'field_content_keywords');
  if (!$contentKeywordsStorage) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/field.storage.node.field_content_keywords.yml';
    $file_contents = file_get_contents($file_path);
    $new_storage = Yaml::decode($file_contents);
    \Drupal\field\Entity\FieldStorageConfig::create($new_storage)->save();
  }

  $page_contents = \Drupal\field\Entity\FieldConfig::loadByName('node', 'page', 'field_content_keywords');
  if(!$page_contents) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/field.field.node.page.field_content_keywords.yml';
    $file_contents = file_get_contents($file_path);
    $new_field = Yaml::decode($file_contents);

    $uuid = $uuid_service->generate();
    $full_array = array_merge(array('uuid' => $uuid), $new_field);
    \Drupal\field\Entity\FieldConfig::create($full_array)->save();
  }

  // Setup the new image styles
  $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/image.style.media_view_browser.yml';
  $file_contents = file_get_contents($file_path);
  $image_style_1 = Yaml::decode($file_contents);
  $current_style = $config->getEditable('image.style.media_view_browser');
  $current_id = $current_style->get('uuid');
  if(!$current_id) { // Custom View does not exist. So create a new one.
    $uuid = $uuid_service->generate();
    $full_array = array_merge(array('uuid' => $uuid), $image_style_1);
    $current_style->setData($full_array)->save(TRUE);
  }

  $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/image.style.media_view_thumbnail.yml';
  $file_contents = file_get_contents($file_path);
  $image_style_1 = Yaml::decode($file_contents);
  $current_style = $config->getEditable('image.style.media_view_thumbnail');
  $current_id = $current_style->get('uuid');
  if(!$current_id) { // Custom View does not exist. So create a new one.
    $uuid = $uuid_service->generate();
    $full_array = array_merge(array('uuid' => $uuid), $image_style_1);
    $current_style->setData($full_array)->save(TRUE);
  }

  // Override the Content View page with the information needed.
  $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/views.view.content.yml';
  $file_contents = file_get_contents($file_path);
  $content_yml = Yaml::decode($file_contents);

  $get_content_view = $config->getEditable('views.view.content');
  $get_content_view->set('dependencies', $content_yml['dependencies'])->save(TRUE);
  $get_content_view->set('display', $content_yml['display'])->save(TRUE);

  // Override the Media View with the new information needed.
  $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/views.view.media.yml';
  $file_contents = file_get_contents($file_path);
  $media_yml = Yaml::decode($file_contents);

  $get_media_view = $config->getEditable('views.view.media');
  $get_media_view->set('dependencies', $media_yml['dependencies'])->save(TRUE);
  $get_media_view->set('display', $media_yml['display'])->save(TRUE);

  // Override the Basic Page Form Display with the new information needed.
  $profile_name = $config->getEditable('core.extension')->get('profile');
  if(in_array(strtolower($profile_name), array('umbrella_acsf', 'umbrella_local'))) {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/umbrella/core.entity_form_display.node.page.default.yml';
  } else {
    $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/optional/core.entity_form_display.node.page.default.yml';
  }

  $file_contents = file_get_contents($file_path);
  $page_form_yml = Yaml::decode($file_contents);

  $get_page_form = $config->getEditable('core.entity_form_display.node.page.default');
  $get_page_form->set('dependencies', $page_form_yml['dependencies'])->save(TRUE);
  $get_page_form->set('content', $page_form_yml['content'])->save(TRUE);
  $get_page_form->set('third_party_settings', $page_form_yml['third_party_settings'])->save(TRUE);
  $get_page_form->set('hidden', $page_form_yml['hidden'])->save(TRUE);
}

/**
 * Update Content, Media, & General People List Views.
 */
function ucr_core_update_8002() {
  $config = \Drupal::configFactory();

  // Override the Content View page with the information needed.
  $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/views.view.content.yml';
  $file_contents = file_get_contents($file_path);
  $content_yml = Yaml::decode($file_contents);

  $get_content_view = $config->getEditable('views.view.content');
  $get_content_view->set('dependencies', $content_yml['dependencies'])->save(TRUE);
  $get_content_view->set('display', $content_yml['display'])->save(TRUE);

  // Override the Media View with the new information needed.
  $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/views.view.media.yml';
  $file_contents = file_get_contents($file_path);
  $media_yml = Yaml::decode($file_contents);

  $get_media_view = $config->getEditable('views.view.media');
  $get_media_view->set('dependencies', $media_yml['dependencies'])->save(TRUE);
  $get_media_view->set('display', $media_yml['display'])->save(TRUE);

  // Update the Users' View with the updated display.
  $file_path = DRUPAL_ROOT . '/modules/custom/ucr_core/config/install/views.view.user_admin_people.yml';
  $file_contents = file_get_contents($file_path);
  $people_yml = Yaml::decode($file_contents);

  $get_people_view = $config->getEditable('views.view.user_admin_people');
  $get_people_view->set('display', $people_yml['display'])->save(TRUE);
}